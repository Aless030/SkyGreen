<?php
/**
 * SISTEMA DE GESTIÓN DE ÁRBOLES - ADMINISTRADOR
 * Versión optimizada para Docker/Hosting
 * Fecha: 2024
 */

// ===============================================
// CONFIGURACIÓN INICIAL Y HEADERS
// ===============================================

// Configurar headers para JSON desde el inicio si es POST
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    header('Content-Type: application/json; charset=utf-8');
}

error_reporting(E_ALL);
ini_set('display_errors', 1);

// Configurar zona horaria de Bolivia
date_default_timezone_set('America/La_Paz');

// ===============================================
// CONEXIÓN A BASE DE DATOS
// ===============================================

$conn = new mysqli("host.docker.internal", "root", "", "reforest", 3306);

if ($conn->connect_error) {
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        echo json_encode(['success' => false, 'message' => 'Error de conexión: ' . $conn->connect_error]);
        exit;
    }
    die("Error de conexión: " . $conn->connect_error);
}

// Configurar MySQL para usar la zona horaria de Bolivia
$conn->query("SET time_zone = '-04:00'");

// ===============================================
// LIBRERÍAS Y DIRECTORIOS
// ===============================================

require_once 'phpqrcode/qrlib.php';

// Crear directorios necesarios
$directories = ['uploads/trees/', 'uploads/pdfs/', 'qr_codes/'];
foreach ($directories as $dir) {
    if (!file_exists($dir)) {
        mkdir($dir, 0777, true);
    }
}

// ===============================================
// FUNCIONES AUXILIARES
// ===============================================

/**
 * Obtener la URL base del proyecto
 */
function getBaseUrl() {
    $protocol = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? 'https' : 'http';
    $host = $_SERVER['HTTP_HOST'];
    $path = dirname($_SERVER['SCRIPT_NAME']);
    
    // Normalizar el path
    if ($path === '/' || $path === '\\') {
        $path = '';
    }
    
    return $protocol . "://" . $host . $path;
}

/**
 * Validar y procesar archivo de imagen
 */
function processImageFile($file) {
    $allowed = array("jpg" => "image/jpg", "jpeg" => "image/jpeg", "gif" => "image/gif", "png" => "image/png");
    $filename = $file['name'];
    $filetype = $file['type'];
    $filesize = $file['size'];
    
    // Verificar extensión
    $ext = strtolower(pathinfo($filename, PATHINFO_EXTENSION));
    if (!array_key_exists($ext, $allowed)) {
        return ['success' => false, 'message' => 'Formato de imagen no válido (JPG, JPEG, PNG, GIF)'];
    }
    
    // Verificar tamaño (5MB máximo)
    if ($filesize > 5 * 1024 * 1024) {
        return ['success' => false, 'message' => 'La imagen es demasiado grande. Máximo: 5MB'];
    }
    
    // Verificar tipo MIME
    if (!in_array($filetype, $allowed)) {
        return ['success' => false, 'message' => 'Problema al verificar el tipo de imagen'];
    }
    
    // Generar nombre único y mover archivo
    $newName = 'img_' . time() . '_' . uniqid() . '.' . $ext;
    $targetPath = 'uploads/trees/' . $newName;
    
    if (move_uploaded_file($file['tmp_name'], $targetPath)) {
        return ['success' => true, 'path' => $targetPath];
    } else {
        return ['success' => false, 'message' => 'Error al guardar la imagen'];
    }
}

/**
 * Validar y procesar archivo PDF
 */
function processPdfFile($file) {
    $filename = $file['name'];
    $filetype = $file['type'];
    $filesize = $file['size'];
    
    // Verificar que sea PDF
    $ext = strtolower(pathinfo($filename, PATHINFO_EXTENSION));
    if ($ext !== 'pdf' || $filetype !== 'application/pdf') {
        return ['success' => false, 'message' => 'Selecciona un archivo PDF válido'];
    }
    
    // Verificar tamaño (10MB máximo)
    if ($filesize > 10 * 1024 * 1024) {
        return ['success' => false, 'message' => 'El PDF es demasiado grande. Máximo: 10MB'];
    }
    
    // Generar nombre único y mover archivo
    $newName = 'pdf_' . time() . '_' . uniqid() . '.pdf';
    $targetPath = 'uploads/pdfs/' . $newName;
    
    if (move_uploaded_file($file['tmp_name'], $targetPath)) {
        return ['success' => true, 'path' => $targetPath];
    } else {
        return ['success' => false, 'message' => 'Error al guardar el PDF'];
    }
}

/**
 * Generar código QR
 */
function generateQR($treeId, $url) {
    $qrFilename = 'qr_codes/qr_' . $treeId . '.png';
    
    try {
        // Eliminar QR anterior si existe
        if (file_exists($qrFilename)) {
            unlink($qrFilename);
        }
        
        // Generar nuevo QR
        QRcode::png($url, $qrFilename, QR_ECLEVEL_L, 4);
        
        if (!file_exists($qrFilename)) {
            throw new Exception("No se pudo generar el código QR");
        }
        
        return ['success' => true, 'filename' => $qrFilename];
    } catch (Exception $e) {
        error_log("Error al generar QR: " . $e->getMessage());
        return ['success' => false, 'message' => $e->getMessage()];
    }
}

// ===============================================
// PROCESAMIENTO DEL FORMULARIO (POST)
// ===============================================

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        // Debug información recibida
        error_log("=== PROCESANDO NUEVO ÁRBOL ===");
        error_log("Datos POST: " . print_r($_POST, true));
        error_log("Archivos: " . print_r($_FILES, true));
        error_log("Hora Bolivia: " . date('Y-m-d H:i:s'));
        
        // ===============================================
        // RECOPILAR Y VALIDAR DATOS DEL FORMULARIO
        // ===============================================
        
        $especie = trim($_POST['especie'] ?? '');
        $nombre_comun = trim($_POST['nombre_comun'] ?? '');
        $codigo_arbol = trim($_POST['codigo_arbol'] ?? '');
        $edad = isset($_POST['edad']) && is_numeric($_POST['edad']) ? intval($_POST['edad']) : 0;
        $estado = trim($_POST['estado'] ?? '');
        $altura = isset($_POST['altura']) && is_numeric($_POST['altura']) ? floatval($_POST['altura']) : 0;
        $diametroTronco = isset($_POST['diametroTronco']) && is_numeric($_POST['diametroTronco']) ? floatval($_POST['diametroTronco']) : 0;
        $diametro_copa = isset($_POST['diametro_copa']) && is_numeric($_POST['diametro_copa']) ? floatval($_POST['diametro_copa']) : 0;
        $latitud = isset($_POST['lat']) && is_numeric($_POST['lat']) ? floatval($_POST['lat']) : 0;
        $longitud = isset($_POST['lng']) && is_numeric($_POST['lng']) ? floatval($_POST['lng']) : 0;
        $propiedad = trim($_POST['propiedad'] ?? '');
        $otb = trim($_POST['otb'] ?? '');
        $nombre_area_verde = trim($_POST['nombre_area_verde'] ?? '');
        $inspector = trim($_POST['inspector'] ?? '');
        
        // ===============================================
        // VALIDACIONES DE CAMPOS OBLIGATORIOS
        // ===============================================
        
        $validations = [
            ['field' => $especie, 'message' => 'El campo "Especie del Árbol" es obligatorio'],
            ['field' => $nombre_comun, 'message' => 'El campo "Nombre Común" es obligatorio'],
            ['field' => $codigo_arbol, 'message' => 'El código del árbol es obligatorio'],
            ['field' => $estado, 'message' => 'Debe seleccionar un estado/categoría'],
            ['field' => $propiedad, 'message' => 'El campo "Propiedad" es obligatorio'],
            ['field' => $otb, 'message' => 'El campo "OTB" es obligatorio'],
            ['field' => $nombre_area_verde, 'message' => 'El campo "Nombre del Área Verde" es obligatorio'],
            ['field' => $inspector, 'message' => 'El campo "Inspector" es obligatorio'],
        ];
        
        foreach ($validations as $validation) {
            if (empty($validation['field'])) {
                echo json_encode(['success' => false, 'message' => $validation['message']]);
                exit;
            }
        }
        
        // Validaciones numéricas
        if ($edad <= 0) {
            echo json_encode(['success' => false, 'message' => 'La edad debe ser mayor a 0']);
            exit;
        }
        
        if ($altura <= 0) {
            echo json_encode(['success' => false, 'message' => 'La altura debe ser mayor a 0']);
            exit;
        }
        
        if ($diametroTronco <= 0) {
            echo json_encode(['success' => false, 'message' => 'El diámetro del tronco debe ser mayor a 0']);
            exit;
        }
        
        if ($diametro_copa <= 0) {
            echo json_encode(['success' => false, 'message' => 'El diámetro de la copa debe ser mayor a 0']);
            exit;
        }
        
        // Validar coordenadas
        if ($latitud == 0 || $longitud == 0) {
            echo json_encode(['success' => false, 'message' => 'Debe seleccionar una ubicación válida']);
            exit;
        }
        
        // Validar formato del código
        if (!preg_match('/^[A-Za-z0-9\-_]+$/', $codigo_arbol)) {
            echo json_encode(['success' => false, 'message' => 'El código solo puede contener letras, números, guiones (-) y guiones bajos (_)']);
            exit;
        }
        
        // ===============================================
        // VERIFICAR CÓDIGO ÚNICO
        // ===============================================
        
        $checkStmt = $conn->prepare("SELECT id FROM arboles WHERE codigo_arbol = ?");
        if (!$checkStmt) {
            echo json_encode(['success' => false, 'message' => 'Error al verificar código: ' . $conn->error]);
            exit;
        }
        
        $checkStmt->bind_param("s", $codigo_arbol);
        $checkStmt->execute();
        $checkResult = $checkStmt->get_result();
        
        if ($checkResult->num_rows > 0) {
            echo json_encode(['success' => false, 'message' => 'Ya existe un árbol con el código: ' . $codigo_arbol]);
            $checkStmt->close();
            exit;
        }
        $checkStmt->close();
        
        // ===============================================
        // PROCESAR ARCHIVOS
        // ===============================================
        
        // Procesar imagen (obligatoria)
        if (!isset($_FILES['foto']) || $_FILES['foto']['error'] !== 0) {
            echo json_encode(['success' => false, 'message' => 'Debe seleccionar una imagen del árbol']);
            exit;
        }
        
        $imageResult = processImageFile($_FILES['foto']);
        if (!$imageResult['success']) {
            echo json_encode(['success' => false, 'message' => $imageResult['message']]);
            exit;
        }
        $fotoUrl = $imageResult['path'];
        
        // Procesar PDF (opcional)
        $pdfUrl = null;
        if (isset($_FILES['pdf']) && $_FILES['pdf']['error'] === 0) {
            $pdfResult = processPdfFile($_FILES['pdf']);
            if (!$pdfResult['success']) {
                echo json_encode(['success' => false, 'message' => $pdfResult['message']]);
                exit;
            }
            $pdfUrl = $pdfResult['path'];
        }
        
        // ===============================================
        // INSERTAR EN BASE DE DATOS
        // ===============================================
        
        $fecha_registro = date('Y-m-d');
        $hora_registro = date('H:i:s');
        $coordenadas = "POINT(" . $longitud . " " . $latitud . ")";
        
        error_log("Insertando árbol en BD con código: " . $codigo_arbol);
        
        $stmt = $conn->prepare("INSERT INTO arboles (
            especie, nombre_comun, edad, estado, fotoUrl, altura, diametroTronco, 
            diametro_copa, codigo_arbol, latitud, longitud, coordenadas,
            propiedad, otb, nombre_area_verde, inspector, pdfUrl, 
            fecha_registro, hora_registro
        ) VALUES (
            ?, ?, ?, ?, ?, ?, ?, 
            ?, ?, ?, ?, ST_GeomFromText(?),
            ?, ?, ?, ?, ?, 
            ?, ?
        )");
        
        if (!$stmt) {
            echo json_encode(['success' => false, 'message' => 'Error al preparar consulta: ' . $conn->error]);
            exit;
        }
        
        $stmt->bind_param("ssissddssddssssssss", 
            $especie, $nombre_comun, $edad, $estado, $fotoUrl, $altura, $diametroTronco, 
            $diametro_copa, $codigo_arbol, $latitud, $longitud, $coordenadas,
            $propiedad, $otb, $nombre_area_verde, $inspector, $pdfUrl, 
            $fecha_registro, $hora_registro
        );
        
        if (!$stmt->execute()) {
            echo json_encode(['success' => false, 'message' => 'Error al guardar: ' . $stmt->error]);
            exit;
        }
        
        $lastId = $conn->insert_id;
        error_log("Árbol insertado con ID: " . $lastId);
        
        // ===============================================
        // GENERAR CÓDIGO QR
        // ===============================================
        
        $baseUrl = getBaseUrl();
        $treeUrl = $baseUrl . "/index.php?tree_id=" . $lastId;
        
        $qrResult = generateQR($lastId, $treeUrl);
        
        // Actualizar registro con URL del QR si se generó correctamente
        if ($qrResult['success']) {
            $updateStmt = $conn->prepare("UPDATE arboles SET qrUrl = ? WHERE id = ?");
            if ($updateStmt) {
                $qrFilename = $qrResult['filename'];
                $updateStmt->bind_param("si", $qrFilename, $lastId);
                $updateStmt->execute();
                $updateStmt->close();
                error_log("QR generado y actualizado en BD: " . $qrFilename);
            }
        }
        
        // ===============================================
        // RESPUESTA EXITOSA
        // ===============================================
        
        $response = [
            'success' => true, 
            'message' => 'Árbol registrado exitosamente',
            'id' => $lastId,
            'qr_url' => $treeUrl,
            'qr_file' => $qrResult['success'] ? $qrResult['filename'] : null,
            'timestamp' => date('Y-m-d H:i:s')
        ];
        
        echo json_encode($response);
        $stmt->close();
        exit;
        
    } catch (Exception $e) {
        error_log("EXCEPCIÓN: " . $e->getMessage());
        echo json_encode(['success' => false, 'message' => 'Error del servidor: ' . $e->getMessage()]);
        exit;
    }
}

// ===============================================
// CONSULTAR ÁRBOLES EXISTENTES
// ===============================================

$sql = "SELECT 
    id, especie, nombre_comun, edad, estado, fotoUrl, altura, diametroTronco, 
    diametro_copa, codigo_arbol, ST_AsText(coordenadas) as coordenadas, 
    latitud, longitud, propiedad, otb, nombre_area_verde, inspector, 
    pdfUrl, qrUrl, DATE_FORMAT(fecha_registro, '%d/%m/%Y') as fecha_formato, 
    hora_registro 
FROM arboles 
ORDER BY fecha_registro DESC, hora_registro DESC";

$result = $conn->query($sql);
$arboles = [];

if ($result && $result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $arboles[] = $row;
    }
}

$conn->close();
?>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SkyGreen - Administrador</title>
    
    <!-- =============================================== -->
    <!-- LIBRERÍAS EXTERNAS -->
    <!-- =============================================== -->
    
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;700&display=swap" rel="stylesheet">
    
    <!-- =============================================== -->
    <!-- ESTILOS CSS -->
    <!-- =============================================== -->
    
    <style>
        /* Reset y configuración base */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            min-height: 100vh;
            color: #333;
        }

        /* =============================================== */
        /* HEADER Y NAVEGACIÓN */
        /* =============================================== */

        .header {
            background: white;
            padding: 1rem 0;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .nav {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 2rem;
        }

        .logo {
            display: flex;
            align-items: center;
            font-size: 1.8rem;
            font-weight: bold;
            color: #333;
        }

        .logo-img {
            height: 50px;
            width: auto;
            vertical-align: middle;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            text-decoration: none;
            color: #666;
            font-weight: 400;
            transition: color 0.3s ease;
        }

        .nav-links a:hover {
            color: #333;
        }

        /* =============================================== */
        /* LAYOUT PRINCIPAL */
        /* =============================================== */

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        .admin-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .admin-title {
            font-size: 3rem;
            font-weight: 300;
            color: #333;
            margin-bottom: 1rem;
        }

        .admin-subtitle {
            font-size: 1.1rem;
            color: #666;
            max-width: 600px;
            margin: 0 auto;
            line-height: 1.6;
            font-weight: 300;
        }

        .content-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        /* =============================================== */
        /* FORMULARIO */
        /* =============================================== */

        .form-card {
            background: white;
            border-radius: 8px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            border: 1px solid #e9ecef;
            max-height: 800px;
            overflow-y: auto;
        }

        .form-title {
            font-size: 1.3rem;
            font-weight: 400;
            color: #333;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
        }

        .form-title i {
            margin-right: 0.5rem;
            color: #3ebeab;
        }

        .form-section {
            border: 1px solid #e9ecef;
            border-radius: 6px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            background: #f8f9fa;
        }

        .form-section-title {
            font-size: 1rem;
            font-weight: 500;
            color: #482e83;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
        }

        .form-section-title i {
            margin-right: 0.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .form-row-four {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr;
            gap: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #555;
        }

        .form-input, .form-select {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
        }

        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #482e83;
            box-shadow: 0 0 0 2px rgba(72, 46, 131, 0.1);
        }

        .form-select {
            cursor: pointer;
        }

        /* =============================================== */
        /* SUBIDA DE ARCHIVOS */
        /* =============================================== */

        .file-input-container {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .file-input {
            display: none;
        }

        .file-input-label {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px dashed #dee2e6;
            border-radius: 4px;
            background: #f8f9fa;
            color: #666;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            font-size: 1rem;
        }

        .file-input-label:hover {
            border-color: #3ebeab;
            background: #f0f8f0;
            color: #482e83;
        }

        .file-input-label i {
            margin-right: 0.5rem;
            font-size: 1.2rem;
        }

        .file-preview {
            margin-top: 1rem;
            text-align: center;
        }

        .file-preview img {
            max-width: 200px;
            max-height: 150px;
            border-radius: 4px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .file-info {
            background: #e8f5e8;
            border: 1px solid #c3e6cb;
            border-radius: 4px;
            padding: 0.5rem;
            margin-top: 0.5rem;
            font-size: 0.9rem;
            color: #482e83;
        }

        /* =============================================== */
        /* BOTONES */
        /* =============================================== */

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 4px;
            font-size: 1rem;
            font-weight: 400;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
        }

        .btn-primary {
            background: #482e83;
            color: white;
        }

        .btn-primary:hover {
            background: #3a235f;
        }

        .btn-secondary {
            background: #3ebeab;
            color: white;
        }

        .btn-secondary:hover {
            background: #2d9284;
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .btn-group {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
        }

        /* =============================================== */
        /* MAPA */
        /* =============================================== */

        .map-card {
            background: white;
            border-radius: 8px;
            padding: 1.5rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            border: 1px solid #e9ecef;
        }

        .map-title {
            font-size: 1.3rem;
            font-weight: 400;
            color: #333;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
        }

        .map-title i {
            margin-right: 0.5rem;
            color: #3ebeab;
        }

        #map {
            width: 100%;
            height: 500px;
            border-radius: 4px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 1rem;
        }

        .coordinates-display {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            padding: 1rem;
            text-align: center;
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
            color: #495057;
        }

        .coordinates-display strong {
            color: #3ebeab;
        }

        /* =============================================== */
        /* MARCADORES Y POPUPS */
        /* =============================================== */

        .tree-marker {
            background-image: url('https://cdn2.iconfinder.com/data/icons/miscellaneous-iii-glyph-style/150/tree-512.png');
            background-size: cover;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .tree-marker:hover {
            transform: scale(1.1);
        }

        .mapboxgl-popup-content {
            border-radius: 4px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            max-width: 350px;
        }

        .mapboxgl-popup-content h3 {
            color: #333;
            margin-bottom: 0.5rem;
            font-weight: 400;
        }

        .mapboxgl-popup-content img {
            border-radius: 8px;
            margin: 0.5rem 0;
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .mapboxgl-popup-content p {
            margin: 0.25rem 0;
            font-size: 0.9rem;
            color: #555;
        }

        .view-tree-btn {
            background: #3ebeab;
            color: white;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 4px;
            text-decoration: none;
            font-size: 0.8rem;
            display: inline-block;
            margin-top: 0.5rem;
            transition: background 0.3s ease;
        }

        .view-tree-btn:hover {
            background: #2d9284;
            color: white;
        }

        /* =============================================== */
        /* UTILITARIOS */
        /* =============================================== */

        .location-hint {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 1rem;
            margin-bottom: 1rem;
            color: #495057;
            font-size: 0.9rem;
        }

        .location-hint i {
            margin-right: 0.5rem;
            color: #3ebeab;
        }

        .success-message {
            background: #d4edda;
            color: #482e83;
            border: 1px solid #c3e6cb;
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 1rem;
            display: none;
        }

        /* =============================================== */
        /* ANIMACIONES */
        /* =============================================== */

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* =============================================== */
        /* RESPONSIVE DESIGN */
        /* =============================================== */

        @media (max-width: 768px) {
            .content-grid {
                grid-template-columns: 1fr;
            }

            .form-row, .form-row-four {
                grid-template-columns: 1fr;
            }

            .nav {
                padding: 0 1rem;
            }

            .nav-links {
                display: none;
            }

            .admin-title {
                font-size: 2rem;
            }

            .container {
                padding: 1rem;
            }

            #map {
                height: 350px;
            }
        }
    </style>
</head>

<body>
    <!-- =============================================== -->
    <!-- HEADER Y NAVEGACIÓN -->
    <!-- =============================================== -->
    
    <header class="header">
        <nav class="nav">
            <a href="#home" class="logo">
                <img src="img/logoemavrita.png" alt="Emavra Logo" class="logo-img">
            </a>
            <ul class="nav-links">
                <li><a href="index.php">Volver Al Inicio</a></li>
            </ul>
        </nav>
    </header>

    <!-- =============================================== -->
    <!-- CONTENIDO PRINCIPAL -->
    <!-- =============================================== -->
    
    <div class="container">
        <div class="admin-header">
            <h1 class="admin-title">Panel de Administración</h1>
            <p class="admin-subtitle">
                Registra y gestiona los árboles de la Zona Norte de Cochabamba. 
                Cada árbol registrado contribuye a construir un futuro más verde y sostenible.
            </p>
        </div>

        <div class="success-message" id="successMessage">
            <i class="fas fa-check-circle"></i>
            ¡Árbol registrado exitosamente!
        </div>

        <div class="content-grid">
            <!-- =============================================== -->
            <!-- FORMULARIO DE REGISTRO -->
            <!-- =============================================== -->
            
            <div class="form-card">
                <h2 class="form-title">
                    <i class="fas fa-plus-circle"></i>
                    Registrar Nuevo Árbol
                </h2>
                
                <form id="arbolForm" enctype="multipart/form-data">
                    <!-- Sección: Información del Árbol -->
                    <div class="form-section">
                        <div class="form-section-title">
                            <i class="fas fa-tree"></i>
                            Información del Árbol
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-tree"></i> Especie Del Árbol
                            </label>
                            <input type="text" name="especie" class="form-input" placeholder="Ej: Molle" required />
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-seedling"></i> Nombre Común
                            </label>
                            <input type="text" name="nombre_comun" class="form-input" placeholder="Ej: Ceibo" required />
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-calendar"></i> Edad (años)
                                </label>
                                <input type="number" name="edad" class="form-input" placeholder="Ej: 5" required />
                            </div>
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-shield-alt"></i> Estado/Categoría
                                </label>
                                <select name="estado" class="form-select" required>
                                    <option value="">Selecciona una categoría</option>
                                    <option value="exótico">Exótico</option>
                                    <option value="nativo">Nativo</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-row-four">
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-arrows-alt-v"></i> Altura (metros)
                                </label>
                                <input type="number" step="0.1" name="altura" class="form-input" placeholder="Ej: 3.5" required/>
                            </div>
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-circle"></i> Diámetro Tronco (cm)
                                </label>
                                <input type="number" step="0.1" name="diametroTronco" class="form-input" placeholder="Ej: 25.5" required/>
                            </div>
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-circle"></i> Diámetro Copa (m)
                                </label>
                                <input type="number" step="0.1" name="diametro_copa" class="form-input" placeholder="Ej: 4.2" required/>
                            </div>
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-barcode"></i> Código Árbol
                                </label>
                                <input type="text" name="codigo_arbol" class="form-input" placeholder="Ej: P1, P2" required minlength="1"/>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-map-marker-alt"></i> Latitud
                                </label>
                                <input type="number" step="0.000001" name="lat" id="latInput" class="form-input" placeholder="Ej: -17.393838" />
                            </div>
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-map-marker-alt"></i> Longitud
                                </label>
                                <input type="number" step="0.000001" name="lng" id="lngInput" class="form-input" placeholder="Ej: -66.156977" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-camera"></i> Fotografía del Árbol
                            </label>
                            <div class="file-input-container">
                                <input type="file" id="foto" name="foto" class="file-input" accept="image/*" required>
                                <label for="foto" class="file-input-label">
                                    <i class="fas fa-cloud-upload-alt"></i>
                                    Seleccionar imagen del árbol
                                </label>
                            </div>
                            <div id="filePreview" class="file-preview"></div>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-file-pdf"></i> PDF Informativo (Opcional)
                            </label>
                            <div class="file-input-container">
                                <input type="file" id="pdf" name="pdf" class="file-input" accept=".pdf">
                                <label for="pdf" class="file-input-label">
                                    <i class="fas fa-cloud-upload-alt"></i>
                                    Seleccionar PDF del árbol
                                </label>
                            </div>
                            <div id="pdfPreview" class="file-preview"></div>
                        </div>
                    </div>

                    <!-- Sección: Información de Registro -->
                    <div class="form-section">
                        <div class="form-section-title">
                            <i class="fas fa-clipboard-list"></i>
                            Información de Registro
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-user-tie"></i> Inspector
                                </label>
                                <input type="text" name="inspector" class="form-input" placeholder="Nombre del inspector" required />
                            </div>
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-home"></i> Propiedad
                                </label>
                                <input type="text" name="propiedad" class="form-input" placeholder="Tipo de propiedad" required />
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-map-signs"></i> OTB
                                </label>
                                <input type="text" name="otb" class="form-input" placeholder="Organización Territorial de Base" required />
                            </div>
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-leaf"></i> Nombre del Área Verde
                                </label>
                                <input type="text" name="nombre_area_verde" class="form-input" placeholder="Nombre del área verde" required />
                            </div>
                        </div>
                    </div>

                    <!-- Sección: Ubicación -->
                    <div class="form-section">
                        <div class="form-section-title">
                            <i class="fas fa-map-marker-alt"></i>
                            Ubicación
                        </div>

                        <div class="location-hint">
                            <i class="fas fa-info-circle"></i>
                            Selecciona la ubicación del árbol en el mapa haciendo clic o usando tu ubicación actual.
                        </div>

                        <div class="btn-group">
                            <button type="button" class="btn btn-secondary" onclick="obtenerUbicacion()">
                                <i class="fas fa-crosshairs"></i>
                                Mi Ubicación
                            </button>
                            <button type="button" class="btn btn-primary" onclick="confirmarUbicacion()">
                                <i class="fas fa-check"></i>
                                Confirmar Ubicación
                            </button>
                        </div>
                    </div>

                    <button type="button" id="agregarArbolBtn" class="btn btn-primary" style="width: 100%; margin-top: 1rem;" disabled onclick="submitForm()">
                        <i class="fas fa-plus"></i>
                        Registrar Árbol
                    </button>
                </form>
            </div>

            <!-- =============================================== -->
            <!-- MAPA DE UBICACIÓN -->
            <!-- =============================================== -->
            
            <div class="map-card">
                <h2 class="map-title">
                    <i class="fas fa-map"></i>
                    Mapa de Ubicación
                </h2>
                <div id="map"></div>
                
                <div class="coordinates-display" id="coordinatesDisplay">
                    <strong>Coordenadas actuales:</strong><br>
                    <span id="currentCoords">Selecciona un punto en el mapa</span>
                </div>
            </div>
        </div>
    </div>

    <!-- =============================================== -->
    <!-- JAVASCRIPT -->
    <!-- =============================================== -->
    
    <script>
        // ===============================================
        // CONFIGURACIÓN INICIAL
        // ===============================================
        
        mapboxgl.accessToken = 'pk.eyJ1IjoiYWxlc3NpcyIsImEiOiJjbGcxbHBtbHQwdDU5M2RubDFodjY3a2x0In0.NXe43GdM4PJBj7ow0Dnkpw';

        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [-66.156977, -17.393838],
            zoom: 17,
            pitch: 50,
            bearing: -17.6
        });

        // Variables globales
        let marker, lng, lat;
        let latInput, lngInput;

        // ===============================================
        // FUNCIONES AUXILIARES
        // ===============================================
        
        /**
         * Obtener la URL base del proyecto
         */
        function getBaseUrl() {
            const protocol = window.location.protocol;
            const hostname = window.location.hostname;
            const port = window.location.port ? ':' + window.location.port : '';
            const pathname = window.location.pathname;
            const directory = pathname.substring(0, pathname.lastIndexOf('/'));
            
            return protocol + '//' + hostname + port + directory;
        }

        /**
         * Actualizar display de coordenadas y inputs
         */
        function updateCoordinatesDisplay(longitude, latitude) {
            const coordsElement = document.getElementById('currentCoords');
            if (longitude && latitude) {
                coordsElement.innerHTML = `
                    <strong>Latitud:</strong> ${latitude.toFixed(6)}<br>
                    <strong>Longitud:</strong> ${longitude.toFixed(6)}
                `;
                
                if (latInput && lngInput) {
                    latInput.value = latitude.toFixed(6);
                    lngInput.value = longitude.toFixed(6);
                }
            } else {
                coordsElement.textContent = 'Selecciona un punto en el mapa';
                if (latInput && lngInput) {
                    latInput.value = '';
                    lngInput.value = '';
                }
            }
        }

        /**
         * Actualizar mapa desde inputs de coordenadas
         */
        function updateMapFromInputs() {
            if (!latInput || !lngInput) return;
            
            const inputLat = parseFloat(latInput.value);
            const inputLng = parseFloat(lngInput.value);
            
            if (isNaN(inputLat) || isNaN(inputLng)) return;
            
            if (inputLat < -90 || inputLat > 90 || inputLng < -180 || inputLng > 180) {
                showNotification('Las coordenadas están fuera del rango válido', 'error');
                return;
            }
            
            lng = inputLng;
            lat = inputLat;
            
            if (marker) {
                marker.setLngLat([inputLng, inputLat]);
            } else {
                marker = new mapboxgl.Marker({
                    draggable: true,
                    color: '#4a7c59'
                })
                .setLngLat([inputLng, inputLat])
                .addTo(map);

                marker.on('dragend', function() {
                    const lngLat = marker.getLngLat();
                    lng = lngLat.lng;
                    lat = lngLat.lat;
                    updateCoordinatesDisplay(lng, lat);
                });
            }
            
            map.flyTo({
                center: [inputLng, inputLat],
                zoom: 17
            });
            
            const coordsElement = document.getElementById('currentCoords');
            coordsElement.innerHTML = `
                <strong>Latitud:</strong> ${inputLat.toFixed(6)}<br>
                <strong>Longitud:</strong> ${inputLng.toFixed(6)}
            `;
        }

        /**
         * Mostrar notificación temporal
         */
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 1rem 1.5rem;
                border-radius: 10px;
                font-weight: 500;
                z-index: 10000;
                animation: slideIn 0.3s ease;
                background: ${type === 'success' ? '#d4edda' : '#f8d7da'};
                color: ${type === 'success' ? '#155724' : '#721c24'};
                border: 1px solid ${type === 'success' ? '#c3e6cb' : '#f5c6cb'};
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            `;
            notification.innerHTML = `<i class="fas fa-${type === 'success' ? 'check' : 'exclamation'}-circle"></i> ${message}`;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 4000);
        }

        // ===============================================
        // EVENT LISTENERS DE ARCHIVOS
        // ===============================================
        
        // Preview de imagen
        document.getElementById('foto').addEventListener('change', function(e) {
            const file = e.target.files[0];
            const preview = document.getElementById('filePreview');
            
            if (file) {
                const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
                if (!allowedTypes.includes(file.type)) {
                    showNotification('Selecciona un archivo de imagen válido (JPG, PNG, GIF)', 'error');
                    e.target.value = '';
                    preview.innerHTML = '';
                    return;
                }
                
                const maxSize = 5 * 1024 * 1024;
                if (file.size > maxSize) {
                    showNotification('El archivo es demasiado grande. Máximo: 5MB', 'error');
                    e.target.value = '';
                    preview.innerHTML = '';
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(event) {
                    preview.innerHTML = `
                        <img src="${event.target.result}" alt="Vista previa">
                        <div class="file-info">
                            <i class="fas fa-file-image"></i> ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)
                        </div>
                    `;
                };
                reader.readAsDataURL(file);
                
                document.querySelector('label[for="foto"]').innerHTML = `
                    <i class="fas fa-check-circle"></i>
                    Imagen seleccionada: ${file.name}
                `;
            } else {
                preview.innerHTML = '';
                document.querySelector('label[for="foto"]').innerHTML = `
                    <i class="fas fa-cloud-upload-alt"></i>
                    Seleccionar imagen del árbol
                `;
            }
        });

        // Preview de PDF
        document.getElementById('pdf').addEventListener('change', function(e) {
            const file = e.target.files[0];
            const preview = document.getElementById('pdfPreview');
            
            if (file) {
                if (file.type !== 'application/pdf') {
                    showNotification('Selecciona un archivo PDF válido', 'error');
                    e.target.value = '';
                    preview.innerHTML = '';
                    return;
                }
                
                const maxSize = 10 * 1024 * 1024;
                if (file.size > maxSize) {
                    showNotification('El PDF es demasiado grande. Máximo: 10MB', 'error');
                    e.target.value = '';
                    preview.innerHTML = '';
                    return;
                }
                
                preview.innerHTML = `
                    <div class="file-info">
                        <i class="fas fa-file-pdf"></i> ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)
                    </div>
                `;
                
                document.querySelector('label[for="pdf"]').innerHTML = `
                    <i class="fas fa-check-circle"></i>
                    PDF seleccionado: ${file.name}
                `;
            } else {
                preview.innerHTML = '';
                document.querySelector('label[for="pdf"]').innerHTML = `
                    <i class="fas fa-cloud-upload-alt"></i>
                    Seleccionar PDF del árbol (opcional)
                `;
            }
        });

        // ===============================================
        // CONFIGURACIÓN DEL MAPA
        // ===============================================
        
        map.on('load', function() {
            const arboles = <?php echo json_encode($arboles); ?>;
            const baseUrl = getBaseUrl();
            
            arboles.forEach(arbol => {
                const el = document.createElement('div');
                el.className = 'tree-marker';

                // Color según estado
                switch (arbol.estado.toLowerCase()) {
                    case 'exótico':
                        el.style.border = '3px solid rgb(229, 255, 0)';
                        break;
                    case 'nativo':
                        el.style.border = '3px solid #2ed573';
                        break;
                    default:
                        el.style.border = '3px solid #57606f';
                }
                
                const correctQrUrl = `${baseUrl}/index.php?tree_id=${arbol.id}`;

                const treeMarker = new mapboxgl.Marker(el)
                    .setLngLat([parseFloat(arbol.longitud), parseFloat(arbol.latitud)])
                    .addTo(map);

                const popup = new mapboxgl.Popup({
                        offset: 25
                    })
                    .setHTML(`
                    <div style="max-width: 320px;">
                        <h3><i class="fas fa-tree"></i> ${arbol.especie}</h3>
                        
                        ${arbol.fotoUrl ? `<img src="${baseUrl}/${arbol.fotoUrl}" alt="Foto del árbol" style="width: 100%; height: 180px; object-fit: cover;" />` : ''}
                        
                        <div style="margin: 10px 0; padding: 8px; background: #f8f9fa; border-radius: 4px;">
                            <p><strong>Nombre común:</strong> ${arbol.nombre_comun}</p>
                            <p><i class="fas fa-calendar"></i> <strong>Edad:</strong> ${arbol.edad} años</p>
                            <p><i class="fas fa-arrows-alt-v"></i> <strong>Altura:</strong> ${arbol.altura}m</p>
                            <p><i class="fas fa-circle"></i> <strong>Diámetro Tronco:</strong> ${arbol.diametroTronco}cm</p>
                            <p><i class="fas fa-circle"></i> <strong>Diámetro Copa:</strong> ${arbol.diametro_copa}m</p>
                            <p><i class="fas fa-barcode"></i> <strong>Código:</strong> ${arbol.codigo_arbol}</p>
                            <p><i class="fas fa-shield-alt"></i> <strong>Estado:</strong> ${arbol.estado}</p>
                        </div>
                        
                        <div style="margin: 10px 0; padding: 8px; background: #e8f5e8; border-radius: 4px;">
                            <p><i class="fas fa-user-tie"></i> <strong>Inspector:</strong> ${arbol.inspector || 'N/A'}</p>
                            <p><i class="fas fa-home"></i> <strong>Propiedad:</strong> ${arbol.propiedad || 'N/A'}</p>
                            <p><i class="fas fa-map-signs"></i> <strong>OTB:</strong> ${arbol.otb || 'N/A'}</p>
                            <p><i class="fas fa-leaf"></i> <strong>Área Verde:</strong> ${arbol.nombre_area_verde || 'N/A'}</p>
                        </div>
                        
                        <div style="margin: 10px 0; padding: 8px; background: #fff3cd; border-radius: 4px;">
                            <p><i class="fas fa-calendar-alt"></i> <strong>Registrado:</strong> ${arbol.fecha_formato || 'N/A'} a las ${arbol.hora_registro || 'N/A'}</p>
                            <p><i class="fas fa-map-marker-alt"></i> <strong>Coordenadas:</strong> ${arbol.latitud}, ${arbol.longitud}</p>
                        </div>
                        
                        <div style="text-align: center; margin-top: 15px;">
                            <div style="font-size: 0.9rem; color: #666; margin-bottom: 8px;">
                                Código QR del árbol
                            </div>
                            ${arbol.qrUrl ? `<img src="${baseUrl}/${arbol.qrUrl}" 
                                 alt="QR del árbol" 
                                 style="width: 80px; height: 80px; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px;" />` : 
                                 `<img src="https://api.qrserver.com/v1/create-qr-code/?size=120x120&data=${encodeURIComponent(correctQrUrl)}" 
                                 alt="QR del árbol" 
                                 style="width: 80px; height: 80px; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px;" />`}
                            ${arbol.pdfUrl ? `<br><a href="${baseUrl}/${arbol.pdfUrl}" target="_blank" class="view-tree-btn">
                                <i class="fas fa-file-pdf"></i> Ver PDF
                            </a>` : ''}
                        </div>
                    </div>
                `);

                treeMarker.setPopup(popup);
            });
        });

        // Event listener para clics en el mapa
        map.on('click', (e) => {
            lng = e.lngLat.lng;
            lat = e.lngLat.lat;

            updateCoordinatesDisplay(lng, lat);

            if (marker) {
                marker.setLngLat(e.lngLat);
            } else {
                marker = new mapboxgl.Marker({
                        draggable: true,
                        color: '#4a7c59'
                    })
                    .setLngLat(e.lngLat)
                    .addTo(map);

                marker.on('dragend', function() {
                    const lngLat = marker.getLngLat();
                    lng = lngLat.lng;
                    lat = lngLat.lat;
                    updateCoordinatesDisplay(lng, lat);
                });
            }
        });

        // ===============================================
        // FUNCIONES DE UBICACIÓN
        // ===============================================
        
        /**
         * Confirmar ubicación seleccionada
         */
        function confirmarUbicacion() {
            const inputLat = latInput && !isNaN(parseFloat(latInput.value)) ? parseFloat(latInput.value) : null;
            const inputLng = lngInput && !isNaN(parseFloat(lngInput.value)) ? parseFloat(lngInput.value) : null;
            
            const finalLat = inputLat !== null ? inputLat : lat;
            const finalLng = inputLng !== null ? inputLng : lng;
            
            if (finalLng && finalLat && finalLat !== 0 && finalLng !== 0) {
                lng = finalLng;
                lat = finalLat;
                
                if (latInput && latInput.value !== finalLat.toString()) {
                    latInput.value = finalLat.toFixed(6);
                }
                if (lngInput && lngInput.value !== finalLng.toString()) {
                    lngInput.value = finalLng.toFixed(6);
                }
                
                document.getElementById('agregarArbolBtn').disabled = false;
                showNotification('Ubicación confirmada correctamente', 'success');
            } else {
                showNotification('Ingresa o selecciona una ubicación válida en el mapa', 'error');
            }
        }

        /**
         * Obtener ubicación actual del usuario
         */
        function obtenerUbicacion() {
            if (navigator.geolocation) {
                const options = {
                    enableHighAccuracy: true,
                    timeout: 20000,
                    maximumAge: 0
                };

                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const newLng = position.coords.longitude;
                        const newLat = position.coords.latitude;

                        console.log('Precisión GPS:', position.coords.accuracy + 'm');

                        lng = newLng;
                        lat = newLat;

                        updateCoordinatesDisplay(newLng, newLat);

                        if (marker) {
                            marker.setLngLat([newLng, newLat]);
                        } else {
                            marker = new mapboxgl.Marker({
                                draggable: true,
                                color: '#2d5016'
                            })
                            .setLngLat([newLng, newLat])
                            .addTo(map);

                            marker.on('dragend', function() {
                                const lngLat = marker.getLngLat();
                                lng = lngLat.lng;
                                lat = lngLat.lat;
                                updateCoordinatesDisplay(lng, lat);
                            });
                        }

                        map.flyTo({
                            center: [newLng, newLat],
                            zoom: 17
                        });

                        document.getElementById('agregarArbolBtn').disabled = false;
                        showNotification(`Ubicación obtenida (Precisión: ${position.coords.accuracy.toFixed(2)}m)`, 'success');
                    },
                    (error) => {
                        let message = 'Error al obtener la ubicación. ';
                        switch(error.code) {
                            case error.PERMISSION_DENIED:
                                message += "Permite el acceso a tu ubicación.";
                                break;
                            case error.POSITION_UNAVAILABLE:
                                message += "La ubicación no está disponible.";
                                break;
                            case error.TIMEOUT:
                                message += "Tiempo agotado para obtener ubicación GPS.";
                                break;
                            default:
                                message += "Error desconocido.";
                                break;
                        }
                        showNotification(message, 'error');
                        console.error('Error geolocalización:', error);
                    },
                    options 
                );
            } else {
                showNotification('La geolocalización no es compatible con este navegador.', 'error');
            }
        }

        // ===============================================
        // FUNCIÓN PRINCIPAL DE ENVÍO
        // ===============================================
        
        /**
         * Enviar formulario al servidor
         */
        function submitForm() {
            console.log("=== INICIANDO ENVÍO DE FORMULARIO ===");
            
            const form = document.getElementById('arbolForm');
            const formData = new FormData(form);
            
            // Debug FormData
            console.log("=== DATOS A ENVIAR ===");
            for (let [key, value] of formData.entries()) {
                console.log(`${key}: "${value}"`);
            }
            
            // ===============================================
            // VALIDACIONES CLIENTE
            // ===============================================
            
            const especie = form.querySelector('[name="especie"]').value.trim();
            const codigo_arbol = form.querySelector('[name="codigo_arbol"]').value.trim();
            
            if (!especie) {
                showNotification('El campo "Especie del Árbol" es obligatorio', 'error');
                return;
            }
            
            if (!codigo_arbol) {
                showNotification('El código del árbol es obligatorio', 'error');
                return;
            }
            
            if (!/^[A-Za-z0-9\-_]+$/.test(codigo_arbol)) {
                showNotification('El código solo puede contener letras, números, guiones (-) y guiones bajos (_)', 'error');
                return;
            }
            
            if (!document.getElementById('foto').files[0]) {
                showNotification('Selecciona una imagen del árbol', 'error');
                return;
            }
            
            // Validar coordenadas
            const finalLat = latInput && !isNaN(parseFloat(latInput.value)) ? parseFloat(latInput.value) : lat;
            const finalLng = lngInput && !isNaN(parseFloat(lngInput.value)) ? parseFloat(lngInput.value) : lng;

            if (!finalLng || !finalLat || finalLng === 0 || finalLat === 0) {
                showNotification('Selecciona o ingresa una ubicación válida', 'error');
                return;
            }
            
            // Agregar coordenadas finales
            formData.set('lng', finalLng);
            formData.set('lat', finalLat);

            // ===============================================
            // ENVÍO AJAX
            // ===============================================
            
            const btn = document.getElementById('agregarArbolBtn');
            const originalText = btn.innerHTML;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Registrando árbol...';
            btn.disabled = true;

            fetch('administrador.php', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                console.log('Estado respuesta:', response.status);
                console.log('Respuesta OK:', response.ok);
                
                if (!response.ok) {
                    throw new Error(`Error HTTP: ${response.status}`);
                }
                
                return response.text();
            })
            .then(responseText => {
                console.log('Longitud respuesta:', responseText.length);
                console.log('Respuesta cruda:', responseText);
                
                const cleanResponseText = responseText.trim();
                
                let data;
                try {
                    data = JSON.parse(cleanResponseText);
                } catch (e) {
                    console.error('Error parsing JSON:', e);
                    console.error('Respuesta limpia:', cleanResponseText);
                    
                    if (cleanResponseText.includes('<!DOCTYPE') || cleanResponseText.includes('<html')) {
                        throw new Error('El servidor devolvió HTML en lugar de JSON. Verifica los logs del servidor.');
                    } else if (cleanResponseText.includes('Fatal error') || cleanResponseText.includes('Parse error')) {
                        throw new Error('Error PHP: ' + cleanResponseText.substring(0, 200));
                    } else {
                        throw new Error('Respuesta no es JSON válido: ' + cleanResponseText.substring(0, 100));
                    }
                }
                
                console.log('Datos parseados:', data);
                
                if (data.success) {
                    // ===============================================
                    // ÉXITO - LIMPIAR FORMULARIO
                    // ===============================================
                    
                    document.getElementById('successMessage').style.display = 'block';
                    form.reset();
                    document.getElementById('filePreview').innerHTML = '';
                    document.getElementById('pdfPreview').innerHTML = '';
                    
                    // Resetear labels de archivos
                    document.querySelector('label[for="foto"]').innerHTML = `
                        <i class="fas fa-cloud-upload-alt"></i>
                        Seleccionar imagen del árbol
                    `;
                    document.querySelector('label[for="pdf"]').innerHTML = `
                        <i class="fas fa-cloud-upload-alt"></i>
                        Seleccionar PDF del árbol (opcional)
                    `;
                    
                    // Limpiar mapa
                    if (marker) {
                        marker.remove();
                        marker = null;
                    }
                    lng = null;
                    lat = null;
                    updateCoordinatesDisplay();
                    
                    // Resetear botón
                    btn.innerHTML = originalText;
                    btn.disabled = true;
                    
                    showNotification('¡Árbol registrado exitosamente!', 'success');
                    
                    // Recargar página después de 2 segundos
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                } else {
                    showNotification(data.message || 'Error al registrar el árbol', 'error');
                    btn.innerHTML = originalText;
                    btn.disabled = false;
                }
            })
            .catch(error => {
                console.error('Error fetch:', error);
                showNotification('Error al registrar: ' + error.message, 'error');
                btn.innerHTML = originalText;
                btn.disabled = false;
            });
        }

        // ===============================================
        // INICIALIZACIÓN
        // ===============================================
        
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM cargado - Inicializando aplicación');
            
            // Inicializar referencias a inputs de coordenadas
            latInput = document.getElementById('latInput');
            lngInput = document.getElementById('lngInput');

            // Event listeners para inputs de coordenadas
            if (latInput) {
                latInput.addEventListener('input', function() {
                    clearTimeout(this.timeout);
                    this.timeout = setTimeout(() => {
                        updateMapFromInputs();
                    }, 1000);
                });
                
                latInput.addEventListener('blur', updateMapFromInputs);
            }

            if (lngInput) {
                lngInput.addEventListener('input', function() {
                    clearTimeout(this.timeout);
                    this.timeout = setTimeout(() => {
                        updateMapFromInputs();
                    }, 1000);
                });
                
                lngInput.addEventListener('blur', updateMapFromInputs);
            }

            console.log('Aplicación inicializada correctamente');
        });
    </script>
</body>
</html>